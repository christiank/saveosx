#! /bin/bash

# Copyright Â© 2014 Calum MacRae
# Use of this source code is governed by an ISC
# license that can be found in the LICENSE file.

# Streamlined bootstrapper to set-up Save OS X

# Ensure script is being run from the 'scripts' subdir
if [[ ! $(pwd) =~ .*\/saveosx.*\/scripts$ ]]; then
    echo "Please run this script from the inteded directory!"
    echo "For instructions, please see the README"
    exit 1
fi

# Grab funcs/vars
. resources

# First, drop any chached sudo access (sudo does not require a password to perform this function)
sudo -k

# Prompt for initial sudo password (will be updated througout with `sudo -v`)
title ""$BLUE_UL"Welcome to Save OS X!"$ESC""
cat << EOM

Welcome to the Save OS X project, an effort to make OS X
a more comfortable system for hackers, developers & power users.

It looks like you're running the 'quickstrap' script.
You'll be up and running in no time!

This script will set up your environment for you. It will automatically
install pkgsrc & its associated binary package manager - pkgin, with signed
packages, and set up your path environments so binaries and man-pages can
be found.

Please enter your password for sudo authentication

EOM

# Prompt for initial sudo password (will be updated througout with `sudo -v`)
saferun sudo echo "sudo authenticaion successful!"
# Keep initial sudo auth alive
while true ; do sudo -n true ; sleep 60 ; kill -0 "$$" || exit ; done 2>/dev/null &

# Check for Home Brew install
if [ -f /usr/local/bin/brew ]; then
    echo -e ""$RED"It looks like you have Home Brew installed. This could seriously conflict with pkgsrc!"
    echo -e "As we don't wish to affect what you may have implemented, we'll leave it up to you to remove it."$ESC""
    exit 1
fi

# Check for MacPorts install
if [ -f /opt/local/bin/port ]; then
    echo -e ""$RED"It looks like you have MacPorts installed. This could seriously conflict with pkgsrc!"
    echo -e "As we don't wish to affect what you may have implemented, we'll leave it up to you to remove it."$ESC""
    exit 1
fi

# Download and install pkgsrc
echo "Fetching pkgin from the Save OS X repo..."

# Download the bootstrap, if not already there (from multiple runs)
if [ ! -f "${BOOTSTRAP_TARBALL}" ] ; then
    saferun curl -s -o "${BOOTSTRAP_TARBALL}" http://pkgsrc.saveosx.org/Darwin/bootstrap/bootstrap-x86_64-2014Q4.tar.gz
fi
# extract the pkgin bootstrap in the root directory
echo -e "pkgin retrieved successfully, proceeding to install..."
sudo tar xfP "${BOOTSTRAP_TARBALL}" -C / &> /dev/null
echo -e ""$GREEN"pkgin installed."$ESC"\nAdding Save OS X repo..."

# Add Save OS X repo
if [ ! $(fgrep 'saveosx' /usr/pkg/etc/pkgin/repositories.conf ) ]; then
    echo "http://pkgsrc.saveosx.org/Darwin/2014Q4/x86_64/All" | sudo tee -a /usr/pkg/etc/pkgin/repositories.conf > /dev/null
fi

echo "Your system has now been set up to use the Save OS X repo!"
echo 
echo "Updating pkgin repository information..."
saferun sudo /usr/pkg/bin/pkgin -y update # Update the pkgsrc repository information
echo "Package database updated!"
echo "Setting up GPG for signed packages..."
echo "Importing yrmt's GPG key..."
/usr/pkg/bin/gpg --keyserver hkp://keys.gnupg.net --recv-keys 2D99C8F7 &> /dev/null
echo "Done!"

# Add binary dirs to system-wide path
echo 
echo -e "Updating \$PATH so new binaries can be found..."
echo -e "/usr/pkg/bin\n/usr/pkg/sbin\n/opt/X11/bin" | sudo tee -a /etc/paths.d/saveosx > /dev/null
echo -e "Updating \$MANPATH so new manpages can be found..."
echo -e "MANPATH /usr/pkg/man\nMANPATH /usr/pkg/share/man" | sudo tee -a /etc/man.conf > /dev/null

# Set up PATH eval in user's shellrc
SHELLRC=~/.$(echo $SHELL | awk -F/ '{print$NF}')rc

if [ -f $SHELLRC ]; then
    echo "It looks like your shell's rc file is $SHELLRC"
else
    echo -e "It doesn't look like $SHELLRC exists...\nA new shell rc will be created\n"
fi

# Update user's shell rc file with new $PATH 
if [[ ! $(grep "path_helper" $SHELLRC) ]]; then
    echo "Adding proper PATH evaluation to $SHELLRC"
    echo -e "\n# Evaluate system PATH\nif [ -x /usr/libexec/path_helper ]; then\n    eval \`/usr/libexec/p2ath_helper -s\`\nfi" >> $SHELLRC
else
    echo "It looks like you already have proper PATH evaluation in $SHELLRC"
fi

if [ -x /usr/libexec/path_helper ]; then
    eval `/usr/libexec/path_helper -s`
fi

echo -e "Your system's \$PATH has been updated"

# Final screen!
echo -e "\n"$GREEN_UL"Hurrah! You Saved OS X!"$ESC""
cat << EOM

All processes are complete! So what now? Well, we reccomend you read the
manpage for pkgin at least, as you'll be managing all your non-Apple software
with this excellent package manager.

EOM
echo -e ""$BLUE"Please visit "$BLUE_UL"http://saveosx.org/"$ESC""$BLUE" for all the latest news and other ramblings from the authors:"$ESC""
echo -e ""$YELLOW"Youri Mouton & Calum MacRae"$ESC""
echo 
echo "You can reach us at: youri.mout@gmail.com & calum0macrae@gmail.com"
echo -e "\n\n"
echo -e ""$GREEN"Thanks for using Save OS X!"$ESC""
exit 0
